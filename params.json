{"name":"SpeakingURL","tagline":"Generate of so called 'static' or 'Clean URL' or 'Pretty URL' or 'nice-looking URL' or 'Speaking URL' or 'user-friendly URL' or 'SEO-friendly URL' or 'slug' from a string.","body":"# Speaking URL [![NPM version](https://badge.fury.io/js/speakingurl.png)](http://badge.fury.io/js/speakingurl) [![Build Status](https://travis-ci.org/pid/speakingurl.png)](https://travis-ci.org/pid/speakingurl)\r\n\r\n> Generate a slug with a lot of options; create of so called 'static' or 'Clean URL' or 'Pretty URL' or 'nice-looking URL' or 'Speaking URL' or 'user-friendly URL' or 'SEO-friendly URL' from a string.\r\nThis module aims to transliterate the input string.\r\n\r\nFor use in browser and server - no dependencies!\r\n\r\n[![Module Status](https://nodei.co/npm/speakingurl.png?downloads=true&stars=true)](https://npmjs.org/package/speakingurl)\r\n\r\n## Installation\r\n\r\n#### [npm](https://npmjs.org/package/onetime)\r\n```shell\r\nnpm install speakingurl --save\r\n```\r\n\r\n#### [Bower](http://bower.io)\r\n```shell\r\nbower install --save speakingurl\r\n```\r\n\r\n#### [Component](https://github.com/component/component)\r\n```shell\r\ncomponent install pid/speakingurl\r\n```\r\n#### [jamjs](http://jamjs.org/)\r\n```shell\r\njam install speakingurl\r\n```\r\n\r\n#### [Download Package](https://github.com/pid/speakingurl/releases)\r\ncopy the file speakingurl.min.js to your script directory\r\n\r\n#### [CDN/cloudflare](https://www.cloudflare.com/)\r\n- available versions: http://cdnjs.com/libraries/speakingurl/\r\n- use //cdnjs.cloudflare.com/ajax/libs/speakingurl/0.10.0/speakingurl.min.js\r\n\r\n#### [CDN/maxcdn](https://www.maxcdn.com/)\r\n- available versions: http://www.jsdelivr.com/#!speakingurl\r\n- use //cdn.jsdelivr.net/speakingurl/0.10.0/speakingurl.min.js\r\n\r\n## Usage\r\n### getSlug(input, [options]);\r\n```input```: {string} to convert\r\n\r\n```options``` {object|string} config object or separator string (see below)\r\n\r\n* ```options``` {object}\r\n    * ```separator``` {string} default: '-'\r\n        * char that replace the whitespaces\r\n    * ```lang``` {string} default: 'en'\r\n        * language for symbol translation ('ar', 'de', 'en', 'es', 'fr', 'pt' and 'ru'; more coming soon, please help!)\r\n        * false -> don't convert symbols\r\n    * ```maintainCase``` {boolean} default: false\r\n        * true -> maintain case chars\r\n        * false -> convert all chars to lower case\r\n    * ```titleCase``` {boolean|array} default: false \r\n        * true -> convert input string to title-case\r\n        * array -> exclude words \r\n    * ```truncate``` {number} default: 0\r\n        * 0 -> don't trim length\r\n        * &gt;= 1 -> trim to max length while not breaking any words\r\n    * ```uric``` {boolean} default: false\r\n        * true -> additionally allow chars: \";\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \"$\", \",\", \"/\"    \r\n        * false\r\n    * ```uricNoSlash``` {boolean} default: false\r\n        * true -> additionally allow chars: \";\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \"$\", \",\"\r\n    * ```mark``` {boolean} default: false\r\n        * true -> additionally allow chars: \"-\", \"_\", \".\", \"!\", \"~\", \"*\", \"'\", \"(\", \")\"\r\n    * ```custom``` {object} default: {} \r\n        * custom map for translation, overwrites all i.e. { '&': '#', '*': ' star ' }\r\n\r\n* ```options``` {string} separator\r\n\r\nnotes: default only Base64 chars are allowed (/A-Za-z0-9_-/), setting ```uric```, ```uricNoSlash``` or/and ```mark``` to ```true``` will add the specified chars to the list of allowed characters. The separator-character is always allowed.\r\n\r\n##### Node.js\r\n```js\r\nvar getSlug = require('speakingurl');\r\n```\r\n\r\n##### Browser\r\n```html\r\n<script src=\"bower_components/speakingurl/speakingurl.min.js\"></script>\r\n```\r\n\r\n#### Examples\r\n```js\r\nvar slug;\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\");\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", '*');\r\nconsole.log(slug); // Output: schoener*titel*laesst*gruessen*bel*ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n        separator: '_'\r\n});\r\nconsole.log(slug); // Output: schoener_titel_laesst_gruessen_bel_ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n        uric: true\r\n});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen?-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    uricNoSlash: true\r\n});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen?-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    mark: true\r\n});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen!-bel-ete-!\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    truncate: 20\r\n});\r\nconsole.log(slug); // Output: schoener-titel\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    maintainCase: true\r\n});\r\nconsole.log(slug); // Output: Schoener-Titel-laesst-gruessen-Bel-ete\r\n\r\nslug = getSlug(\"Äpfel & Birnen!\", {\r\n    lang: 'de'\r\n});\r\nconsole.log(slug); // Output: aepfel-und-birnen\r\n\r\nslug = getSlug(\"Apple & Pear!\", {\r\n    lang: 'en' // lang: \"en\" is default, just to clarify\r\n});\r\nconsole.log(slug); // Output: apple-and-pear\r\n\r\nslug = getSlug('Foo & Bar * Baz', {\r\n    custom: {\r\n        '&': ' doo '\r\n    },\r\n    uric:true\r\n});\r\nconsole.log(slug); // Output: foo-doo-bar-baz\r\n\r\nslug = getSlug('Foo ♥ Bar');\r\nconsole.log(slug); // Output: foo-love-bar\r\n\r\nslug = getSlug('Foo & Bar | (Baz) * Doo', {\r\n    custom: {\r\n        '*': 'Boo'\r\n    },\r\n    mark:true\r\n});\r\nconsole.log(slug); // Output: foo-and-bar-or-(baz)-boo-doo\r\n\r\nslug = getSlug('Foo and Bar or Baz', {\r\n    custom: {\r\n        'and': 'und',\r\n        'or': ''\r\n    }\r\n});\r\nconsole.log(slug); // Output: foo-und-bar-baz\r\n\r\nslug = getSlug('NEXUS4 only $299');\r\nconsole.log(slug); // Output: nexus-4-only-usd299\r\n\r\nslug = getSlug('NEXUS4 only €299', {\r\n    maintainCase: true\r\n});\r\nconsole.log(slug); // Output: NEXUS-4-only-EUR299\r\n\r\nslug = getSlug('Don\\'t drink and drive', {\r\n    titleCase: true\r\n});\r\nconsole.log(slug); // Output: Don-t-Drink-And-Drive\r\n\r\nslug = getSlug('Don\\'t drink and drive', {\r\n    titleCase: ['and']\r\n});\r\nconsole.log(slug); // Output: Don-t-Drink-and-Drive\r\n\r\nslug = getSlug('Foo & Bar ♥ Foo < Bar', {\r\n    lang: false\r\n});\r\nconsole.log(slug); // Output: foo-bar-foo-bar\r\n```\r\n\r\n### createSlug([options])\r\n```options```: {object|string} config object or separator string (see above)\r\n\r\nCreate your own specially configured function.\r\n\r\n```js\r\nvar options = {\r\n    maintainCase: true,\r\n    separator: '_'\r\n};\r\nvar mySlug = require('speakingurl').createSlug(options);\r\n// in browser:\r\n// var mySlug = createSlug(options);\r\n\r\nvar slug = mySlug(\"Schöner Titel läßt grüßen!? Bel été !\");\r\nconsole.log(slug); // Output: Schoener_Titel_laesst_gruessen_Bel_ete\r\n```\r\n\r\nCreate your own specially configured function with title-case feature.\r\n\r\n```js\r\nvar options = {\r\n    titleCase: [\r\n        \"a\",\"an\",\"and\",\"as\",\"at\",\"but\",\r\n        \"by\",\"en\",\"for\",\"if\",\"in\",\"nor\",\r\n        \"of\",\"on\",\"or\",\"per\",\"the\",\"to\",\"vs\"\r\n    ]\r\n};\r\nvar mySlug = require('speakingurl').createSlug(options);\r\n// in browser:\r\n// var mySlug = createSlug(options);\r\n\r\nvar slug = mySlug('welcome to the jungle');\r\nconsole.log(slug); // Output: Welcome-to-the-Jungle\r\n```\r\n\r\n## [Changelog](https://raw.github.com/pid/speakingurl/master/Changelog.md)\r\n\r\n## Tests\r\n[![Build Status](https://travis-ci.org/pid/speakingurl.png)](https://travis-ci.org/pid/speakingurl)\r\n\r\n```shell\r\nnpm test\r\n```\r\n\r\n[![Flattr](http://api.flattr.com/button/flattr-badge-large.png)](http://flattr.com/thing/1418477/pidspeakingurl-on-GitHub)\r\n\r\n## References\r\n- http://tools.ietf.org/html/rfc3986\r\n- http://en.wikipedia.org/wiki/Transliteration\r\n\r\n## Credits\r\n- [@dypsilon](https://github.com/dypsilon/js-replace-diacritics)\r\n- [@simov](https://github.com/simov/slugify)\r\n- [@henrikjoreteg](https://github.com/henrikjoreteg/slugger)\r\n\r\n## [License](https://raw.github.com/pid/speakingurl/master/LICENSE)\r\n\r\nThe BSD 3-Clause License (BSD3)\r\n\r\nCopyright (c) 2013-2014 Sascha Droste <pid@posteo.net>\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n* Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/pid/speakingurl/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}