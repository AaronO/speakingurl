{
  "name": "SpeakingURL",
  "tagline": "Generate of so called 'static' or 'Clean URL' or 'Pretty URL' or 'nice-looking URL' or 'Speaking URL' or 'user-friendly URL' or 'SEO-friendly URL' or 'slug' from a string.",
  "body": "SpeakingURL\r\n===========\r\n\r\n[![Build Status](https://travis-ci.org/pid/speakingurl.png)](https://travis-ci.org/pid/speakingurl) [![NPM version](https://badge.fury.io/js/speakingurl.png)](http://badge.fury.io/js/speakingurl) [![Bower version](https://badge.fury.io/bo/speakingurl.svg)](http://badge.fury.io/bo/speakingurl) [![Gem Version](https://badge.fury.io/rb/speakingurl-rails.svg)](http://badge.fury.io/rb/speakingurl-rails) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/pid/speakingurl?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Flattr](http://api.flattr.com/button/flattr-badge-large.png)](http://flattr.com/thing/1418477/pidspeakingurl-on-GitHub)\r\n\r\n\r\n====================================================================================================================================================================================================================================================================================================================================================\r\n\r\n> Generate a slug with a lot of options; create a so-called [Semantic URL](https://en.wikipedia.org/wiki/Semantic_URL) or 'Clean URL' or 'Pretty URL' or 'nice-looking URL' or 'Speaking URL' or 'user-friendly URL' or 'SEO-friendly URL' from a string. This module aims to transliterate the input string.\r\n\r\nFor use in browser and server - no dependencies!\r\n\r\n##### NPM Badge\r\n\r\n[![Module Status](https://nodei.co/npm/speakingurl.png?downloads=true&stars=true)](https://npmjs.org/package/speakingurl)\r\n\r\nInstallation\r\n------------\r\n\r\n#### [npm](https://npmjs.org/package/speakingurl)\r\n\r\n```shell\r\nnpm install speakingurl --save\r\n```\r\n\r\n#### [Bower](http://bower.io)\r\n\r\n```shell\r\nbower install --save speakingurl\r\n```\r\n\r\n#### [Component](https://github.com/component/component)\r\n\r\n```shell\r\ncomponent install pid/speakingurl\r\n```\r\n\r\n#### [jamjs](http://jamjs.org/)\r\n\r\n```shell\r\njam install speakingurl\r\n```\r\n\r\n#### [Ruby on Rails](http://rubyonrails.org/)\r\n\r\n```ruby\r\n# Add to Gemfile\r\ngem 'speakingurl-rails'\r\n```\r\n\r\n#### [Download Package](https://github.com/pid/speakingurl/releases)\r\n\r\ncopy the file speakingurl.min.js to your script directory\r\n\r\n#### [CDN/cloudflare](https://www.cloudflare.com/)\r\n\r\navailable versions:\r\n\r\n-\t[www.cdnjs.com/libraries/speakingurl/](http://cdnjs.com/libraries/speakingurl/)\r\n-\tuse [//cdnjs.cloudflare.com/ajax/libs/speakingurl/10.0.0/speakingurl.min.js](https://cdnjs.cloudflare.com/ajax/libs/speakingurl/10.0.0/speakingurl.min.js)\r\n\r\n#### [CDN/maxcdn](https://www.maxcdn.com/)\r\n\r\navailable versions:\r\n\r\n-\t[www.jsdelivr.com/#!speakingurl](]http://www.jsdelivr.com/#!speakingurl)\r\n-\tuse [//cdn.jsdelivr.net/speakingurl/10.0.0/speakingurl.min.js](https://cdn.jsdelivr.net/speakingurl/10.0.0/speakingurl.min.js)\r\n\r\nUsage\r\n-----\r\n\r\n### getSlug(input, [options]);\r\n\r\n`input`: {string} to convert\r\n\r\n`options` {object|string} config object or separator string (see below)\r\n\r\n-\t`options` {object}\r\n\r\n\t-\t`separator` {string} default: '-'\r\n\t\t-\tchar that replaces the whitespaces\r\n\t-\t`lang` {string} default: 'en' // ISO 639-1 Codes\r\n\t\t-\tlanguage specific transliteration (\r\n\t\t\t-\t'ar' // Arabic\r\n\t\t\t-\t'az' // Azerbaijani\\*\r\n\t\t\t-\t'cs' // Czech\r\n\t\t\t-\t'de' // German\r\n\t\t\t-\t'dv' // Divehi\r\n\t\t\t-\t'en' // English\r\n\t\t\t-\t'es' // Spanish\r\n            -   'fa' // Persian\r\n\t\t\t-\t'fr' // French\r\n\t\t\t-\t'gr' // Greek\\*\r\n\t\t\t-\t'hu' // Hungarian\r\n\t\t\t-\t'it' // Italian\r\n\t\t\t-\t'lt' // Lithuanian\\*\r\n\t\t\t-\t'lv' // Latvian\r\n\t\t\t-\t'my' // Burmese\r\n\t\t\t-\t'mk' // Macedonian\\*\r\n\t\t\t-\t'nl' // Dutch\r\n\t\t\t-\t'pl' // Polish\r\n\t\t\t-\t'pt' // Portuguese\r\n\t\t\t-\t'ro' // Romanian\r\n\t\t\t-\t'ru' // Russian\r\n\t\t\t-\t'sk' // Slovak\r\n\t\t\t-\t'sr' // Serbian\\*\r\n\t\t\t-\t'tr' // Turkish\r\n\t\t\t-\t'uk' // Ukranian\r\n\t\t\t-\t'vn' // Vietnamese\r\n\t-\t`symbols` {boolean} default: true\r\n\t\t-\tfalse -> don't convert symbols\r\n\t\t-\ttrue -> convert symbols according to the 'lang' setting\r\n\t-\t`maintainCase` {boolean} default: false\r\n\t\t-\ttrue -\\> maintain case chars\r\n\t\t-\tfalse -\\> convert all chars to lower case\r\n\t-\t`titleCase` {boolean|array} default: false\r\n\t\t-\ttrue -\\> convert input string to title-case\r\n\t\t-\tarray -\\> titlecase = true, but omit the words from in the array\r\n\t-\t`truncate` {number} default: 0\r\n\t\t-\t0 -\\> don't trim length\r\n\t\t-\t\\>= 1 -\\> trim to max length while not breaking any words\r\n\t-\t`uric` {boolean} default: false\r\n\t\t-\ttrue -\\> additionally allow chars: \";\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \"\\$\", \",\", \"/\"\r\n\t\t-\tfalse\r\n\t-\t`uricNoSlash` {boolean} default: false\r\n\t\t-\ttrue -\\> additionally allow chars: \";\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \"\\$\", \",\"\r\n\t-\t`mark` {boolean} default: false\r\n\t\t-\ttrue -\\> additionally allow chars: \"-\", \"\\_\", \".\", \"!\", \"~\", \"\\*\", \"'\", \"(\", \")\"\r\n\t-\t`custom` {object|array} default: {}\r\n\t\t-\tobject -\\> custom map for translation, overwrites all i.e. { '&': '\\#', '\\*': ' star ' }\r\n\t\t-\tarray -\\> add chars to allowed charMap (see example)\r\n\r\n-\t`options` {string} separator\r\n\r\nnotes: default only Base64 chars are allowed (/A-Za-z0-9\\_-/), setting `uric`, `uricNoSlash` or/and `mark` to `true` will add the specified chars to the list of allowed characters. The separator-character is always allowed.\r\n\r\n##### Node.js\r\n\r\n```js\r\nvar getSlug = require('speakingurl');\r\n```\r\n\r\n##### Browser\r\n\r\n```html\r\n<script src=\"bower_components/speakingurl/speakingurl.min.js\"></script>\r\n```\r\n\r\n#### Ruby on Rails\r\n\r\n```ruby\r\n# Add to application.js\r\n//= require speakingurl\r\n```\r\n\r\n#### Examples\r\n\r\n```js\r\nvar slug;\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\");\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", '*');\r\nconsole.log(slug); // Output: schoener*titel*laesst*gruessen*bel*ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n        separator: '_'\r\n\t});\r\nconsole.log(slug); // Output: schoener_titel_laesst_gruessen_bel_ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n        uric: true\r\n\t});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen?-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    \turicNoSlash: true\r\n\t});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen?-bel-ete\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    \tmark: true\r\n\t});\r\nconsole.log(slug); // Output: schoener-titel-laesst-gruessen!-bel-ete-!\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n    \ttruncate: 20\r\n\t});\r\nconsole.log(slug); // Output: schoener-titel\r\n\r\nslug = getSlug(\"Schöner Titel läßt grüßen!? Bel été !\", {\r\n\t    maintainCase: true\r\n\t});\r\nconsole.log(slug); // Output: Schoener-Titel-laesst-gruessen-Bel-ete\r\n\r\nslug = getSlug(\"Äpfel & Birnen!\", {\r\n\t    lang: 'de'\r\n\t});\r\nconsole.log(slug); // Output: aepfel-und-birnen\r\n\r\nslug = getSlug(\"မြန်မာ သာဓက\", {\r\n\t    lang: 'my'\r\n\t});\r\nconsole.log(slug); // Output: myanma-thadak\r\n\r\nslug = getSlug('މިއަދަކީ ހދ ރީތި ދވހކވ', {\r\n        lang: 'dv'\r\n    });\r\nconsole.log(slug); // Output: miadhakee hd reethi dvhkv\r\n\r\nslug = getSlug(\"Apple & Pear!\", {\r\n\t    lang: 'en' // lang: \"en\" is default, just to clarify\r\n\t});\r\nconsole.log(slug); // Output: apple-and-pear\r\n\r\nslug = getSlug('Foo & Bar * Baz', {\r\n\t    custom: {\r\n\t        '&': ' doo '\r\n\t    },\r\n\t    uric:true\r\n\t});\r\nconsole.log(slug); // Output: foo-doo-bar-baz\r\n\r\nslug = getSlug('Foo ♥ Bar');\r\nconsole.log(slug); // Output: foo-love-bar\r\n\r\nslug = getSlug('Foo & Bar | (Baz) * Doo', {\r\n\t    custom: {\r\n\t        '*': 'Boo'\r\n\t    },\r\n\t    mark:true\r\n\t});\r\nconsole.log(slug); // Output: foo-and-bar-or-(baz)-boo-doo\r\n\r\nslug = getSlug('Foo and Bar or Baz', {\r\n\t    custom: {\r\n\t        'and': 'und',\r\n\t        'or': ''\r\n\t    }\r\n\t});\r\nconsole.log(slug); // Output: foo-und-bar-baz\r\n\r\nslug = getSlug('[Knöpfe]', {\r\n\t\tcustom: [\r\n\t\t\t'[',\r\n\t\t\t']'\r\n\t\t]\r\n\t});\r\nconsole.log(slug); // Output: [knoepfe]\r\n\r\nslug = getSlug('NEXUS4 only $299');\r\nconsole.log(slug); // Output: nexus-4-only-usd299\r\n\r\nslug = getSlug('NEXUS4 only €299', {\r\n\t    maintainCase: true\r\n\t});\r\nconsole.log(slug); // Output: NEXUS-4-only-EUR299\r\n\r\nslug = getSlug('Don\\'t drink and drive', {\r\n\t    titleCase: true\r\n\t});\r\nconsole.log(slug); // Output: Don-t-Drink-And-Drive\r\n\r\nslug = getSlug('Don\\'t drink and drive', {\r\n\t    titleCase: ['and']\r\n\t});\r\nconsole.log(slug); // Output: Don-t-Drink-and-Drive\r\n\r\nslug = getSlug('Foo & Bar ♥ Foo < Bar', {\r\n\t    lang: false\r\n\t});\r\nconsole.log(slug); // Output: foo-bar-foo-bar\r\n\r\nslug = getSlug('Foo & Bar ♥ Foo < Bar', {\r\n\t    symbols: false\r\n\t});\r\nconsole.log(slug); // Output: foo-bar-foo-bar\r\n\r\nslug = getSlug('ä♥ä', {\r\n\t\tlang: 'tr',\r\n\t    symbols: false\r\n\t});\r\nconsole.log(slug); // Output: a\r\n```\r\n\r\n### createSlug([options])\r\n\r\n`options`: {object|string} config object or separator string (see above)\r\n\r\nCreate your own specially configured function.\r\n\r\n```js\r\nvar options = {\r\n\t    maintainCase: true,\r\n\t    separator: '_'\r\n\t};\r\n\r\nvar mySlug = require('speakingurl').createSlug(options);\r\n// in browser:\r\n// var mySlug = createSlug(options);\r\n\r\nvar slug = mySlug(\"Schöner Titel läßt grüßen!? Bel été !\");\r\nconsole.log(slug); // Output: Schoener_Titel_laesst_gruessen_Bel_ete\r\n```\r\n\r\nCreate your own specially configured function with title-case feature.\r\n\r\n```js\r\nvar options = {\r\n\t    titleCase: [\r\n\t        \"a\",\"an\",\"and\",\"as\",\"at\",\"but\",\r\n\t        \"by\",\"en\",\"for\",\"if\",\"in\",\"nor\",\r\n\t        \"of\",\"on\",\"or\",\"per\",\"the\",\"to\",\"vs\"\r\n\t    ]\r\n\t};\r\n\r\nvar mySlug = require('speakingurl').createSlug(options);\r\n// in browser:\r\n// var mySlug = createSlug(options);\r\n\r\nvar slug = mySlug('welcome to the jungle');\r\nconsole.log(slug); // Output: Welcome-to-the-Jungle\r\n```\r\n\r\nChangelog\r\n---------\r\n\r\nsee [CHANGELOG.md](https://raw.github.com/pid/speakingurl/master/CHANGELOG.md)\r\n\r\nTests\r\n-----\r\n\r\n[![Build Status](https://travis-ci.org/pid/speakingurl.png)](https://travis-ci.org/pid/speakingurl)\r\n\r\n```shell\r\nnpm test\r\n```\r\n\r\nContribution\r\n------------\r\n\r\n```shell\r\n\r\n# fork pid/speakingurl on Github\r\n$ git clone git@github.com:<YOUR_USER>/speakingurl.git\r\n$ cd speakingurl\r\n$ npm install\r\n# add your stuff\r\n# add tests\r\n# add example for new feature\r\n# add release info to CHANGELOG.md\r\n# add description/example to README.md\r\n$ gulp\r\n$ commit files (speakingurl.min.js,...)\r\n# if everything works fine, commit, push to your repository\r\n# create pull request\r\n```\r\n\r\nRelease\r\n-------\r\n\r\n```shell\r\n$ gulp bumpup --patch  # --minor # --major\r\n$ gulp\r\n$ gulp release\r\n```\r\n\r\nRelease to RubyGems.org\r\n-----------------------\r\n\r\n```shell\r\n$ gulp\r\n$ gem build speakingurl-rails.gemspec\r\n$ gem push speakingurl-rails-x.x.x.gem\r\n```\r\n\r\nReferences\r\n----------\r\n\r\n-\thttp://tools.ietf.org/html/rfc3986\r\n-\thttp://en.wikipedia.org/wiki/Transliteration\r\n\r\nUse in other environments\r\n-------------------------\r\n\r\n-\t[SpeakingURL with AngularJS](https://github.com/zappan/angular-speakingurl)\r\n-\t[SpeakingURL with Meteor](https://github.com/ongoworks/meteor-speakingurl)\r\n-\t[SpeakingURL with Ruby on Rails](https://rubygems.org/gems/speakingurl-rails)\r\n\r\nPorts\r\n-----\r\n\r\n-\tJava https://github.com/Weltraumschaf/speakingurl thanks to[@Weltraumschaf](https://github.com/Weltraumschaf/)\r\n\r\nCredits\r\n-------\r\n\r\n-\t[@dypsilon](https://github.com/dypsilon/)\r\n-\t[@simov](https://github.com/simov/)\r\n-\t[@henrikjoreteg](https://github.com/henrikjoreteg/)\r\n\r\n[License](https://raw.github.com/pid/speakingurl/master/LICENSE)\r\n----------------------------------------------------------------\r\n\r\nThe BSD 3-Clause License (BSD3)\r\n\r\nCopyright (c) 2013-2016 Sascha Droste pid@posteo.net All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n-\tRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n-\tRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n-\tNeither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}